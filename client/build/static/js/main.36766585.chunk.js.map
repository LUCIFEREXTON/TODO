{"version":3,"sources":["Containers/Login.jsx","Components/TodoElement.jsx","Components/Addnew.jsx","Components/Content.jsx","Components/ListName.jsx","Components/Category.jsx","Containers/Home.jsx","App.jsx","reportWebVitals.js","Store/reducer.js","index.js"],"names":["connect","dispatch","setauthstate","authstate","type","useState","log","setlogin","mailref","useRef","pwdref","nameref","handleSubmit","e","a","preventDefault","email","current","value","password","name","axios","post","process","res","data","error","token","Cookies","set","expires","console","className","htmlFor","id","onChange","login","onSubmit","ref","complete","todoid","curstatus","del","text","completed","handleComplete","handleDelete","window","confirm","onClick","state","userId","loggedInUser","_id","listId","selectedListid","addtotodo","todo","addtolist","list","Label","addto","inputref","handleAdd","todotext","todos","settodos","useEffect","listid","fetchtodo","map","dellist","selectlist","deleteable","onDelete","stopPropagation","toUpperCase","lists","logout","setlists","auth","fetchlist","remove","defaultListid","Home","isAuth","setuser","user","get","jwt","_doc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","concat","curtodo","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36766585.chunk.js","sourcesContent":["import {useState, useRef} from 'react';\r\nimport './Containers.css';\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'\r\nconst Login = ({setauthstate})=>{\r\n\r\n    const [log, setlogin] = useState(false);\r\n    const mailref = useRef(null)\r\n    const pwdref = useRef(null)\r\n    const nameref = useRef(null)\r\n\r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault();\r\n        const email = mailref.current.value;\r\n        const password = pwdref.current.value;\r\n        if(log){\r\n            const name = nameref.current.value;\r\n            if(email && email!=='' && password && password!=='' && name && name!==''){\r\n                try {\r\n                    const res = await axios.post(process.env.REACT_APP_SERVER + 'userauth/signup', { email, password, name })\r\n                    if (res.data.error === null) {\r\n                        const { token } = res.data;\r\n                        Cookies.set('token', token, { expires: 7 })\r\n                        setauthstate(true);\r\n                        \r\n                    }else{\r\n                        console.log(res.data.error);\r\n                    }\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n            else{\r\n                console.log('Fill all details')\r\n            }\r\n        }else{\r\n            if(email && email!=='' && password && password!==''){\r\n                try {\r\n                        const res = await axios.post(process.env.REACT_APP_SERVER + 'userauth/login', { email, password })\r\n                        if (res.data.error === null) {\r\n                            const { token } = res.data;\r\n                            Cookies.set('token', token, { expires: 7 })\r\n                            setauthstate(true);\r\n                        }else{\r\n                            console.log(res.data.error);\r\n                        }\r\n                    } catch (err) {\r\n                        console.log(err);\r\n                    }\r\n            }\r\n            else{\r\n                console.log('Fill all details')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='loginback'>\r\n            {log? 'SignUp' : 'Login'}\r\n            <label htmlFor='state'>\r\n                New User\r\n                <input id='state' type='checkbox' onChange={()=>{setlogin(login=>!login)}}/>\r\n            </label>\r\n            <div className='loginmodal'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label htmlFor='email'> Email\r\n                    </label>\r\n                    <input ref={mailref} id='email' type=\"email\"/>\r\n                    <br/>\r\n                    <label htmlFor='password'> Password:\r\n                    </label>\r\n                    <input ref={pwdref} id='password' type=\"password\"/>\r\n                    <br/>\r\n                    {log && <><label htmlFor='name'> Name:\r\n                    </label>\r\n                    <input ref={nameref} id='name' type=\"text\"/>\r\n                    <br/></>}\r\n                    <input type='submit'/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchtoProps = dispatch=>{\r\n    return {\r\n        setauthstate: (authstate)=> dispatch({type:'SET_AUTH', authstate})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchtoProps)(Login);","import {connect} from 'react-redux';\r\nimport axios from 'axios'\r\nconst TodoElement = ({id, text, completed, complete, del})=>{\r\n\r\n    const handleComplete = async()=>{\r\n        try {\r\n            const res = await axios.post(process.env.REACT_APP_SERVER + 'usertodo/complete', { todoid:id, curstatus:completed });\r\n            const { error } = res.data;\r\n            if (error === null) {\r\n                complete(id, !completed);\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    const handleDelete = async()=>{\r\n        const shouldDelete = window.confirm(\"Are You sure you want to delete\");\r\n        if(shouldDelete){\r\n            try {\r\n                const res = await axios.post(process.env.REACT_APP_SERVER + 'usertodo/delete', { todoid:id });\r\n                const { error } = res.data;\r\n                if (error === null) {\r\n                    del(id);\r\n                }else{\r\n                    console.log(error);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <div className={`todoelement ${completed ? 'complete':''}`}>\r\n            <button className='C' onClick={handleComplete}>Complete</button>\r\n            <div className='text'>{text}</div>\r\n            <button className='D' onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        complete: (todoid, curstatus)=> dispatch({type:'COMPLETE_TODO', todoid, curstatus}),\r\n        del: (todoid)=> dispatch({type:'DELETE_TODO', todoid})\r\n    }\r\n  }\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoElement);","import axios from 'axios';\r\nimport {useRef} from 'react'\r\nimport { connect } from 'react-redux';\r\nconst Addnew = ({Label, addto, userId, listId ,addtotodo, addtolist})=>{\r\n\r\n    const inputref = useRef(null)\r\n\r\n    const handleAdd = async()=>{\r\n        if(addto==='todo' && inputref.current.value!==''){\r\n            const todotext  = inputref.current.value;\r\n            try {\r\n                const res = await axios.post(process.env.REACT_APP_SERVER + 'usertodo/add', { todotext, userId, listId });\r\n                const { error, todo } = res.data;\r\n                if (error === null) {\r\n                    addtotodo(todo)\r\n                    inputref.current.value='';\r\n                }else{\r\n                    console.log(error);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }else if(inputref.current.value!==''){\r\n            const name = inputref.current.value;\r\n            try {\r\n                const res = await axios.post(process.env.REACT_APP_SERVER + 'userlist/add', { name, userId });\r\n                const { error, list } = res.data;\r\n                if (error === null) {\r\n                    addtolist(list);\r\n                    inputref.current.value='';\r\n                }else{\r\n                    console.log(error);\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='add'>\r\n            <div className='label' >\r\n                New {Label}:\r\n                <input ref={inputref} className='addtodoinput' type = 'text'/>\r\n            </div>\r\n            <button onClick={handleAdd}>Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n      userId : state.loggedInUser?._id,\r\n      listId : state.selectedListid\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        addtotodo: (todo) => dispatch({type:'ADD_TODO', todo}),\r\n        addtolist: (list) => dispatch({type:'ADD_LIST', list})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addnew);","import { useEffect } from 'react';\r\nimport TodoElement from './TodoElement';\r\nimport Addnew from './Addnew';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst Content = ({todos, selectedListid, settodos})=>{\r\n    useEffect(()=>{\r\n        const fetchtodo = async ()=>{\r\n            if(selectedListid){\r\n                try{\r\n                    const res = await axios.post(process.env.REACT_APP_SERVER + 'usertodo/gettodos', { listid:selectedListid });\r\n                    const { error, todos } = res.data;\r\n                    if (error === null) {\r\n                        settodos(todos);\r\n                    }else{\r\n                        console.log(error);\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n        fetchtodo();\r\n    },[selectedListid, settodos])\r\n    return (\r\n        <div className='content'>\r\n            <Addnew Label=\"To Do\" addto='todo'/>\r\n            <div id='todolist'>\r\n                {todos?.map(todo=><TodoElement key={todo._id} id={todo._id} text={todo.todotext} completed={todo.completed}/>)} \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n      todos: state.todos,\r\n      selectedListid: state.selectedListid\r\n    }\r\n  }\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    settodos: (todos)=> dispatch({type:'SET_TODOS', todos})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\r\n\r\n","import {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nconst ListName = ({id, name, selectedListid, dellist, selectlist, deleteable})=>{\r\n    const onDelete = async(e) =>{\r\n        e.stopPropagation();\r\n        const shouldDelete = window.confirm(\"Are You sure you want to delete\");\r\n        if(shouldDelete){\r\n            try {\r\n                const res = await axios.post(process.env.REACT_APP_SERVER + 'userlist/delete', { listid:id });\r\n                const { error } = res.data;\r\n                if (error === null) {                \r\n                    dellist(id)\r\n                }\r\n                console.log(error);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className={`listname ${id===selectedListid && 'selected'}`} onClick={()=>{selectlist(id)}}>\r\n            {name.toUpperCase()}\r\n            <br />\r\n            {deleteable && <button onClick={onDelete}>Delete</button>}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\nconst mapReducerToProps = state =>{\r\n    return {\r\n        selectedListid: state.selectedListid\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        dellist: (listid)=>dispatch({type:'DELETE_LIST', listid}),\r\n        selectlist: (listid)=>dispatch({type:'SELECT_LIST', listid})\r\n    }\r\n}\r\nexport default connect(mapReducerToProps, mapDispatchToProps)(ListName);","import {useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport Addnew from './Addnew';\r\nimport ListName from './ListName';\r\nimport {connect} from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\nconst Category = ({auth, logout, lists, loggedInUser, setlists})=>{\r\n    useEffect(()=>{\r\n        const fetchlist = async ()=>{\r\n            if(loggedInUser){\r\n                try{\r\n                    const res = await axios.post(process.env.REACT_APP_SERVER + 'userlist/getlists', { userId:loggedInUser?._id });\r\n                    const { error, lists } = res.data;\r\n                    if (error === null) {\r\n                        setlists(lists);\r\n                    }else{\r\n                        console.log(error);\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n        fetchlist();\r\n    },[loggedInUser, setlists, auth])\r\n    const onLogout = ()=>{\r\n        Cookies.remove('token');\r\n        logout();\r\n    }\r\n    return (\r\n        <div className='category'>\r\n            <button onClick={onLogout}>\r\n                Logout\r\n            </button>\r\n            <Addnew Label=\"List\" addto='list'/>\r\n            <div className='listnames'>\r\n                {lists?.map(list =><ListName key={list._id} id={list._id} name={list.name} deleteable={list._id!==loggedInUser.defaultListid}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapReducerToProps = state =>{\r\n    return {\r\n        loggedInUser: state?.loggedInUser,\r\n        lists: state.lists,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        logout: ()=>dispatch({type:'LOGOUT'}),\r\n        setlists: (lists)=> dispatch({type:'SET_LISTS', lists})\r\n    }\r\n}\r\nexport default connect(mapReducerToProps, mapDispatchToProps)(Category);","import Content from '../Components/Content';\r\nimport Category from '../Components/Category';\r\nconst Home = ()=>{\r\n    return (\r\n        <div className='main'>\r\n            <Content/>\r\n            <Category/>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import { useEffect} from 'react';\nimport * as jwt from 'jsonwebtoken';\nimport Cookies from 'js-cookie'\nimport Login from './Containers/Login'\nimport Home from './Containers/Home'\nimport {connect } from 'react-redux'\n\nfunction App({auth, setauthstate, setuser}) {\n  useEffect(()=>{\n    const token = Cookies.get('token');\n    if(token){\n      const user = jwt.verify(token, process.env.REACT_APP_SECRET)._doc\n      setuser(user);\n      setauthstate(true);\n    }\n  },[setauthstate, setuser, auth])\n\n  return (auth ? <Home/>:<Login/>);\n}\n\nconst mapStateToProps = state =>{\n  return {\n    auth: state.isAuth\n  }\n}\nconst mapDispatchToProps = dispatch =>{\n  return {\n    setauthstate: (authstate)=> dispatch({type:'SET_AUTH', authstate}),\n    setuser: (user)=> dispatch({type:'SET_USER', user})\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isAuth: false,\r\n    loggedInUser: null,\r\n    selectedListid: null,\r\n    todos: [],\r\n    lists: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    // console.log('[logging action]:', JSON.stringify(action));\r\n    switch (action.type) {\r\n        case 'SET_AUTH':\r\n            {\r\n                return {\r\n                    ...state,\r\n                    isAuth: action.authstate\r\n                }\r\n            }\r\n        case 'SET_USER':\r\n            {\r\n                return {\r\n                    ...state,\r\n                    loggedInUser: {...action.user },\r\n                    selectedListid: action.user.defaultListid\r\n                }\r\n            }\r\n        case 'LOGOUT':\r\n            {\r\n                return {\r\n                    isAuth: false,\r\n                    loggedInUser: null,\r\n                    selectedListid: null,\r\n                    todos: [],\r\n                    lists: []\r\n                }\r\n            }\r\n        case 'SET_TODOS':\r\n            {\r\n                return {\r\n                    ...state,\r\n                    todos: [...action.todos]\r\n                }\r\n            }\r\n        case 'SET_LISTS':\r\n            {\r\n                return {\r\n                    ...state,\r\n                    lists: [...action.lists]\r\n                }\r\n            }\r\n        case 'ADD_TODO':\r\n            {\r\n                const { todo } = action\r\n                return {\r\n                    ...state,\r\n                    todos: state.todos.concat(todo)\r\n                }\r\n            }\r\n        case 'ADD_LIST':\r\n            {\r\n                const { list } = action\r\n                return {\r\n                    ...state,\r\n                    lists: state.lists.concat(list),\r\n                    selectedListid: list._id\r\n                }\r\n            }\r\n        case 'COMPLETE_TODO':\r\n            {\r\n                const { todoid, curstatus } = action;\r\n                return {\r\n                    ...state,\r\n                    todos: state.todos.map(curtodo => curtodo._id === todoid ? {...curtodo, completed: curstatus } : {...curtodo })\r\n                }\r\n            }\r\n        case 'DELETE_TODO':\r\n            {\r\n                const { todoid } = action\r\n                return {\r\n                    ...state,\r\n                    todos: state.todos.filter(curtodo => curtodo._id !== todoid)\r\n                }\r\n            }\r\n        case 'SELECT_LIST':\r\n            {\r\n                const { listid } = action\r\n                return {\r\n                    ...state,\r\n                    selectedListid: listid\r\n                }\r\n            }\r\n        case 'DELETE_LIST':\r\n            {\r\n                const { listid } = action\r\n                return {\r\n                    ...state,\r\n                    selectedListid: state.loggedInUser.defaultListid,\r\n                    lists: state.lists.filter(list => list._id !== listid)\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport reducer from './Store/reducer'\n\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware(\n      () => (next) => (action) => next(action)\n    )\n  )\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}